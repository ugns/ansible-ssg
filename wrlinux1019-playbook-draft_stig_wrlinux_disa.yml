---
###############################################################################
#
# Ansible remediation role for profile draft_stig_wrlinux_disa
# Profile Title:  DRAFT DISA STIG for Wind River Linux
# Profile Description:
# This profile contains configuration checks that align to the
# DISA STIG for Wind River Linux.
# This profile is being developed under the DoD consensus model to
# become a STIG in coordination with DISA FSO.
# What is the status of the Wind River Linux STIG?
# The Wind River Linux STIG is in development under the DoD consensus model
# and Wind River has started the process to get approval from DISA. However, in
# the absence of an approved SRG or STIG, vendor recommendations may be used
# instead. The current contents constitute the vendor recommendations at the
# time of the product release containing these contents.
# Note that changes are expected before approval is granted, and those changes
# will be made available in future Wind River Linux Security Profile 1019 RCPL releases.
# More information, including the following, is available from the DISA FAQs
# at https://public.cyber.mil/stigs/faqs/
#
# Benchmark ID:  WRLINUX
# Benchmark Version:  0.1.61
#
# XCCDF Version:  1.1
#
# This file was generated by OpenSCAP 1.2.16 using:
# 	$ oscap xccdf generate fix --profile draft_stig_wrlinux_disa --template urn:xccdf:fix:script:ansible sds.xml
#
# This script is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this remediation role:
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################

 - hosts: all
   pre_tasks:
     - name: Verify Ansible meets SCAP-Security-Guide version requirements.
       assert:
         that: "ansible_version.full is version_compare('2.5', '>=')"
         msg: >
           "You must update Ansible to at least version 2.5 to use this role."

   vars:
      var_aide_scan_notification_email: !!str root@localhost
      var_audispd_remote_server: !!str logcollector
      sysctl_net_ipv6_conf_all_accept_source_route_value: !!str 0
      sysctl_net_ipv4_conf_all_accept_redirects_value: !!str 0
      sysctl_net_ipv4_conf_all_accept_source_route_value: !!str 0
      sysctl_net_ipv4_conf_default_accept_source_route_value: !!str 0
      sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str 1
      var_removable_partition: !!str /dev/cdrom
      var_tftpd_secure_directory: !!str /var/lib/tftpboot
      var_snmpd_ro_string: !!str changemero
      var_snmpd_rw_string: !!str changemerw
      var_sshd_priv_separation: !!str sandbox
   tasks:
    - name: Ensure AIDE is installed
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - PCI-DSS-Req-11.5
        - aide_periodic_cron_checking
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set cron package name - RedHat
      set_fact:
        cron_pkg_name: cronie
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ansible_os_family == "RedHat" or ansible_os_family == "Suse"
      tags:
        - CJIS-5.10.1.3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - PCI-DSS-Req-11.5
        - aide_periodic_cron_checking
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Set cron package name - Debian
      set_fact:
        cron_pkg_name: cron
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ansible_os_family == "Debian"
      tags:
        - CJIS-5.10.1.3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - PCI-DSS-Req-11.5
        - aide_periodic_cron_checking
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Install cron
      package:
        name: '{{ cron_pkg_name }}'
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - PCI-DSS-Req-11.5
        - aide_periodic_cron_checking
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Configure Periodic Execution of AIDE
      cron:
        name: run AIDE check
        minute: 5
        hour: 4
        weekday: 0
        user: root
        job: /usr/sbin/aide --check
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - PCI-DSS-Req-11.5
        - aide_periodic_cron_checking
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure AIDE is installed
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(a)
        - aide_scan_notification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Configure Notification of Post-AIDE Scan Details
      cron:
        name: run AIDE check
        minute: 5
        hour: 4
        weekday: 0
        user: root
        job: /usr/sbin/aide  --check | /bin/mail -s "$(hostname) - AIDE Integrity Check"
          {{ var_aide_scan_notification_email }}
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(a)
        - aide_scan_notification
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Find /etc/sudoers.d/ files
      find:
        paths:
          - /etc/sudoers.d/
      register: sudoers
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_remove_no_authenticate

    - name: Remove lines containing !authenticate from sudoers files
      replace:
        regexp: (^(?!#).*[\s]+\!authenticate.*$)
        replace: '# \g<1>'
        path: '{{ item.path }}'
        validate: /usr/sbin/visudo -cf %s
      with_items:
        - path: /etc/sudoers
        - '{{ sudoers.files }}'
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_remove_no_authenticate

    - name: Find /etc/sudoers.d/ files
      find:
        paths:
          - /etc/sudoers.d/
      register: sudoers
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_remove_nopasswd

    - name: Remove lines containing NOPASSWD from sudoers files
      replace:
        regexp: (^(?!#).*[\s]+NOPASSWD[\s]*\:.*$)
        replace: '# \g<1>'
        path: '{{ item.path }}'
        validate: /usr/sbin/visudo -cf %s
      with_items:
        - path: /etc/sudoers
        - '{{ sudoers.files }}'
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-11
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sudo_remove_nopasswd

    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - ensure_gpgcheck_local_packages
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Ensure GPG check Enabled for Local Packages (Yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: localpkg_gpgcheck
        value: 1
        no_extra_spaces: true
        create: true
      when: '"yum" in ansible_facts.packages'
      tags:
        - NIST-800-171-3.4.8
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-53-CM-5(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - ensure_gpgcheck_local_packages
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - unknown_strategy

    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CJIS-5.5.2
        - NIST-800-53-AC-9(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.4
        - configure_strategy
        - display_login_attempts
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed

    - name: Check for expected pam_lastlog.so entry
      ansible.builtin.lineinfile:
        path: /etc/pam.d/postlogin
        create: false
        regexp: ^\s*session.*required.*pam_lastlog.so\s\+showfailed\s*$
        state: absent
      check_mode: true
      changed_when: false
      register: result_pam_lastlog_present
      when: '"pam" in ansible_facts.packages'
      tags:
        - CJIS-5.5.2
        - NIST-800-53-AC-9(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.4
        - configure_strategy
        - display_login_attempts
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed

    - name: Check if system relies on authselect
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"pam" in ansible_facts.packages'
      tags:
        - CJIS-5.5.2
        - NIST-800-53-AC-9(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.4
        - configure_strategy
        - display_login_attempts
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed

    - name: Remediation where authselect tool is present
      block:

        - name: Check the integrity of the current authselect profile
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          ignore_errors: true

        - name: Informative message based on the authselect integrity check result
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd is success
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because the authselect profile is
                not intact.
              - It is not recommended to manually edit the PAM files when authselect is
                available.
              - In cases where the default authselect profile does not cover a specific
                demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: Get authselect current profile
          ansible.builtin.shell:
            cmd: authselect current -r | awk '{ print $1 }'
          register: result_authselect_profile
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: Define the current authselect profile as a local fact
          ansible.builtin.set_fact:
            authselect_current_profile: '{{ result_authselect_profile.stdout }}'
            authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
          when:
            - result_authselect_profile is not skipped
            - result_authselect_profile.stdout is match("custom/")

        - name: Define the new authselect custom profile as a local fact
          ansible.builtin.set_fact:
            authselect_current_profile: '{{ result_authselect_profile.stdout }}'
            authselect_custom_profile: custom/hardening
          when:
            - result_authselect_profile is not skipped
            - result_authselect_profile.stdout is not match("custom/")

        - name: Get authselect current features to also enable them in the custom profile
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_profile is not skipped
            - authselect_current_profile is not match("custom/")

        - name: Check if any custom profile with the same name was already created in
            the past
          ansible.builtin.stat:
            path: /etc/authselect/{{ authselect_custom_profile }}
          register: result_authselect_custom_profile_present
          changed_when: false
          when:
            - authselect_current_profile is not match("custom/")

        - name: Create a custom profile based on the current profile
          ansible.builtin.command:
            cmd: authselect create-profile hardening -b sssd
          when:
            - result_authselect_check_cmd is success
            - authselect_current_profile is not match("custom/")
            - not result_authselect_custom_profile_present.stat.exists

        - name: Ensure the silent option is not present in the custom profile
          ansible.builtin.replace:
            dest: /etc/authselect/{{ authselect_custom_profile }}/postlogin
            regexp: ^(session.*required.*pam_lastlog.so).*$
            replace: \g<1> showfailed
          when:
            - result_authselect_profile is not skipped

        - name: Ensure the desired configuration is present in the custom profile
          ansible.builtin.lineinfile:
            dest: /etc/authselect/{{ authselect_custom_profile }}/postlogin
            insertbefore: ^session.*
            firstmatch: true
            line: session     required                   pam_lastlog.so showfailed
          when:
            - result_authselect_profile is not skipped

        - name: Ensure a backup of current authselect profile before selecting the custom
            profile
          ansible.builtin.command:
            cmd: authselect apply-changes -b --backup=before-pwhistory-hardening.backup
          register: result_authselect_backup
          when:
            - result_authselect_check_cmd is success
            - result_authselect_profile is not skipped
            - authselect_current_profile is not match("custom/")
            - authselect_custom_profile is not match(authselect_current_profile)

        - name: Ensure the custom profile is selected
          ansible.builtin.command:
            cmd: authselect select {{ authselect_custom_profile }} --force
          register: result_pam_authselect_select_profile
          when:
            - result_authselect_check_cmd is success
            - result_authselect_profile is not skipped
            - authselect_current_profile is not match("custom/")
            - authselect_custom_profile is not match(authselect_current_profile)

        - name: Restore the authselect features in the custom profile
          ansible.builtin.command:
            cmd: authselect enable-feature {{ item }}
          loop: '{{ result_authselect_features.stdout_lines }}'
          when:
            - result_authselect_profile is not skipped
            - result_authselect_features is not skipped
            - result_pam_authselect_select_profile is not skipped

        - name: Ensure the custom profile changes are applied
          ansible.builtin.command:
            cmd: authselect apply-changes -b --backup=after-pwhistory-hardening.backup
          when:
            - result_authselect_check_cmd is success
            - result_authselect_profile is not skipped
      when:
        - '"pam" in ansible_facts.packages'
        - result_pam_lastlog_present.found == 0
        - result_authselect_present.stat.exists
      tags:
        - CJIS-5.5.2
        - NIST-800-53-AC-9(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.4
        - configure_strategy
        - display_login_attempts
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed

    - name: Remediation where authselect tool is not present and PAM files are directly
        edited
      block:

        - name: Ensure the silent option is not present in PAM files
          ansible.builtin.replace:
            dest: /etc/pam.d/postlogin
            regexp: ^(session.*required.*pam_lastlog.so).*$
            replace: \g<1> showfailed

        - name: Ensure the desired configuration is present in PAM files
          ansible.builtin.lineinfile:
            dest: /etc/pam.d/postlogin
            insertbefore: ^session.*
            firstmatch: true
            line: session     required                   pam_lastlog.so showfailed
      when:
        - '"pam" in ansible_facts.packages'
        - result_pam_lastlog_present.found == 0
        - not result_authselect_present.stat.exists
      tags:
        - CJIS-5.5.2
        - NIST-800-53-AC-9(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.4
        - configure_strategy
        - display_login_attempts
        - low_complexity
        - low_disruption
        - low_severity
        - no_reboot_needed

    - name: require single user mode password
      lineinfile:
        create: true
        dest: /usr/lib/systemd/system/rescue.service
        regexp: ^#?ExecStart=
        line: ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block
          default"
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.1
        - NIST-800-171-3.4.5
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IA-2
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - require_singleuser_auth
        - restrict_strategy

    - name: Ensure screen is installed
      package:
        name: screen
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.10
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_screen_installed

    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - accounts_have_homedir_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure new users receive home directories
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/login.defs
            create: false
            regexp: ^\s*CREATE_HOME\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/login.defs
          lineinfile:
            path: /etc/login.defs
            create: false
            regexp: ^\s*CREATE_HOME\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/login.defs
          lineinfile:
            path: /etc/login.defs
            create: true
            regexp: ^\s*CREATE_HOME\s+
            line: CREATE_HOME yes
            state: present
      when: '"login" in ansible_facts.packages'
      tags:
        - accounts_have_homedir_login_defs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the group-owners of their respective initialization
        files
      ansible.builtin.command:
        cmd: awk -F':' '{ if ($3 >= 1000 && $3 != 65534) system("chgrp -f " $3" "$6"/.[^\.]?*")
          }' /etc/passwd
      tags:
        - accounts_user_dot_group_ownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the group-owners of their respective initialization
        files
      ansible.builtin.command:
        cmd: awk -F':' '{ if ($3 >= 1000 && $3 != 65534) system("chmod -f g-w,o-w "$6"/.[^\.]?*")
          }' /etc/passwd
      tags:
        - accounts_user_dot_no_world_writable_programs
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the owners of their respective initialization
        files
      ansible.builtin.command:
        cmd: awk -F':' '{ if ($3 >= 1000 && $3 != 65534) system("chown -f " $3" "$6"/.[^\.]?*")
          }' /etc/passwd
      tags:
        - accounts_user_dot_user_ownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Get all local users from /etc/passwd
      ansible.builtin.getent:
        database: passwd
        split: ':'
      tags:
        - accounts_user_interactive_home_directory_defined
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Create local_users variable from the getent output
      ansible.builtin.set_fact:
        local_users: '{{ ansible_facts.getent_passwd|dict2items }}'
      tags:
        - accounts_user_interactive_home_directory_defined
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive users have an exclusive home directory defined
      ansible.builtin.user:
        name: '{{ item.key }}'
        home: /home/{{ item.key }}
        create_home: false
      loop: '{{ local_users }}'
      when:
        - item.value[2]|int >= 1000
        - item.value[2]|int != 65534
        - not item.value[4] | regex_search('^\/\w*\/\w{1,}')
      tags:
        - accounts_user_interactive_home_directory_defined
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Get all local users from /etc/passwd
      ansible.builtin.getent:
        database: passwd
        split: ':'
      tags:
        - accounts_user_interactive_home_directory_exists
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Create local_users variable from the getent output
      ansible.builtin.set_fact:
        local_users: '{{ ansible_facts.getent_passwd|dict2items }}'
      tags:
        - accounts_user_interactive_home_directory_exists
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive users have a home directory exists
      ansible.builtin.user:
        name: '{{ item.key }}'
        create_home: true
      loop: '{{ local_users }}'
      when:
        - item.value[2]|int >= 1000
        - item.value[2]|int != 65534
      tags:
        - accounts_user_interactive_home_directory_exists
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Get all local users from /etc/passwd
      ansible.builtin.getent:
        database: passwd
        split: ':'
      tags:
        - accounts_users_home_files_groupownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Create local_users variable from the getent output
      ansible.builtin.set_fact:
        local_users: '{{ ansible_facts.getent_passwd|dict2items }}'
      tags:
        - accounts_users_home_files_groupownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Test for existence home directories to avoid creating them, but only fixing
        ownership
      ansible.builtin.stat:
        path: '{{ item.value[4] }}'
      register: path_exists
      loop: '{{ local_users }}'
      when:
        - item.value[2]|int >= 1000
        - item.value[2]|int != 65534
      tags:
        - accounts_users_home_files_groupownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the owners of their respective home directories
      ansible.builtin.file:
        path: '{{ item.0.value[4] }}'
        group: '{{ item.0.value[2] }}'
        recurse: true
      loop: '{{ local_users|zip(path_exists.results)|list }}'
      when: item.1.stat is defined and item.1.stat.exists
      tags:
        - accounts_users_home_files_groupownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Get all local users from /etc/passwd
      ansible.builtin.getent:
        database: passwd
        split: ':'
      tags:
        - accounts_users_home_files_ownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Create local_users variable from the getent output
      ansible.builtin.set_fact:
        local_users: '{{ ansible_facts.getent_passwd|dict2items }}'
      tags:
        - accounts_users_home_files_ownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Test for existence home directories to avoid creating them, but only fixing
        ownership
      ansible.builtin.stat:
        path: '{{ item.value[4] }}'
      register: path_exists
      loop: '{{ local_users }}'
      when:
        - item.value[1]|int >= 1000
        - item.value[1]|int != 65534
      tags:
        - accounts_users_home_files_ownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the owners of their respective home directories
      ansible.builtin.file:
        path: '{{ item.0.value[4] }}'
        owner: '{{ item.0.value[1] }}'
        recurse: true
      loop: '{{ local_users|zip(path_exists.results)|list }}'
      when: item.1.stat is defined and item.1.stat.exists
      tags:
        - accounts_users_home_files_ownership
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Get all local users from /etc/passwd
      ansible.builtin.getent:
        database: passwd
        split: ':'
      tags:
        - accounts_users_home_files_permissions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Create local_users variable from the getent output
      ansible.builtin.set_fact:
        local_users: '{{ ansible_facts.getent_passwd|dict2items }}'
      tags:
        - accounts_users_home_files_permissions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Test for existence home directories to avoid creating them, but only fixing
        group ownership
      ansible.builtin.stat:
        path: '{{ item.value[4] }}'
      register: path_exists
      loop: '{{ local_users }}'
      when:
        - item.value[2]|int >= 1000
        - item.value[2]|int != 65534
      tags:
        - accounts_users_home_files_permissions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the group-owners of their respective home
        directories
      ansible.builtin.file:
        path: '{{ item.0.value[4] }}'
        mode: g-w,o=-
        follow: false
        recurse: true
      loop: '{{ local_users|zip(path_exists.results)|list }}'
      when: item.1.stat is defined and item.1.stat.exists
      tags:
        - accounts_users_home_files_permissions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Get all local users from /etc/passwd
      ansible.builtin.getent:
        database: passwd
        split: ':'
      tags:
        - file_groupownership_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Create local_users variable from the getent output
      ansible.builtin.set_fact:
        local_users: '{{ ansible_facts.getent_passwd|dict2items }}'
      tags:
        - file_groupownership_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Test for existence of home directories to avoid creating them, but only fixing
        group ownership
      ansible.builtin.stat:
        path: '{{ item.value[4] }}'
      register: path_exists
      loop: '{{ local_users }}'
      when:
        - item.value[2]|int >= 1000
        - item.value[2]|int != 65534
      tags:
        - file_groupownership_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the group-owners of their respective home
        directories
      ansible.builtin.file:
        path: '{{ item.0.value[4] }}'
        group: '{{ item.0.value[2] }}'
      loop: '{{ local_users|zip(path_exists.results)|list }}'
      when: item.1.stat is defined and item.1.stat.exists
      tags:
        - file_groupownership_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Get all local users from /etc/passwd
      ansible.builtin.getent:
        database: passwd
        split: ':'
      tags:
        - file_ownership_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Create local_users variable from the getent output
      ansible.builtin.set_fact:
        local_users: '{{ ansible_facts.getent_passwd|dict2items }}'
      tags:
        - file_ownership_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Test for existence home directories to avoid creating them, but only fixing
        ownership
      ansible.builtin.stat:
        path: '{{ item.value[4] }}'
      register: path_exists
      loop: '{{ local_users }}'
      when:
        - item.value[1]|int >= 1000
        - item.value[1]|int != 65534
      tags:
        - file_ownership_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the owners of their respective home directories
      ansible.builtin.file:
        path: '{{ item.0.value[4] }}'
        owner: '{{ item.0.value[1] }}'
      loop: '{{ local_users|zip(path_exists.results)|list }}'
      when: item.1.stat is defined and item.1.stat.exists
      tags:
        - file_ownership_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Get all local users from /etc/passwd
      ansible.builtin.getent:
        database: passwd
        split: ':'
      tags:
        - file_permissions_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Create local_users variable from the getent output
      ansible.builtin.set_fact:
        local_users: '{{ ansible_facts.getent_passwd|dict2items }}'
      tags:
        - file_permissions_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Test for existence home directories to avoid creating them, but only fixing
        group ownership
      ansible.builtin.stat:
        path: '{{ item.value[4] }}'
      register: path_exists
      loop: '{{ local_users }}'
      when:
        - item.value[2]|int >= 1000
        - item.value[2]|int != 65534
      tags:
        - file_permissions_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the group-owners of their respective home
        directories
      ansible.builtin.file:
        path: '{{ item.0.value[4] }}'
        mode: u-s,g-w-s,o=-
      loop: '{{ local_users|zip(path_exists.results)|list }}'
      when: item.1.stat is defined and item.1.stat.exists
      tags:
        - file_permissions_home_directories
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Ensure interactive local users are the owners of their respective initialization
        files
      ansible.builtin.shell:
        cmd: |-
          for dir in $(awk -F':' '{ if ($3 >= 1000 && $3 != 65534) print $6}' /etc/passwd); do
            for file in $(find $dir -maxdepth 1 -type f -name ".*"); do
              sed -i 's/^\([\s]*umask\s*\)/#\1/g' $file
            done
          done
      tags:
        - accounts_umask_interactive_users
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - NIST-800-53-AC-2(g)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-4(23)
        - PCI-DSS-Req-10.1
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_auditd_enabled

    - name: Enable service auditd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service auditd
          service:
            name: auditd
            enabled: 'yes'
            state: started
            masked: 'no'
          when:
            - '"audit" in ansible_facts.packages'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - '"audit" in ansible_facts.packages'
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - NIST-800-53-AC-2(g)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SI-4(23)
        - PCI-DSS-Req-10.1
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_auditd_enabled

    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Search /etc/audit/rules.d for audit rule entries for sysadmin actions
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*/etc/sudoers.*$
        patterns: '*.rules'
      register: find_audit_sysadmin_actions
      when: '"audit" in ansible_facts.packages'
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use /etc/audit/rules.d/actions.rules as the recipient for the rule
      set_fact:
        all_sysadmin_actions_files:
          - /etc/audit/rules.d/actions.rules
      when:
        - '"audit" in ansible_facts.packages'
        - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched
          == 0
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_sysadmin_actions_files:
          - '{{ find_audit_sysadmin_actions.files | map(attribute=''path'') | list | first
            }}'
      when:
        - '"audit" in ansible_facts.packages'
        - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched
          > 0
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers rule in rules.d
      lineinfile:
        path: '{{ all_sysadmin_actions_files[0] }}'
        line: -w /etc/sudoers -p wa -k actions
        create: true
      when: '"audit" in ansible_facts.packages'
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers.d rule in rules.d
      lineinfile:
        path: '{{ all_sysadmin_actions_files[0] }}'
        line: -w /etc/sudoers.d/ -p wa -k actions
        create: true
      when: '"audit" in ansible_facts.packages'
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -w /etc/sudoers -p wa -k actions
        create: true
      when: '"audit" in ansible_facts.packages'
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Inserts/replaces audit rule for /etc/sudoers.d in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -w /etc/sudoers.d/ -p wa -k actions
        create: true
      when: '"audit" in ansible_facts.packages'
      tags:
        - CJIS-5.4.1.1
        - NIST-800-171-3.1.7
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - audit_rules_sysadmin_actions
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.4
        - NIST-800-53-AU-5(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-24
        - audit_rules_system_shutdown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Collect all files from /etc/audit/rules.d with .rules extension
      find:
        paths: /etc/audit/rules.d/
        patterns: '*.rules'
      register: find_rules_d
      when: '"audit" in ansible_facts.packages'
      tags:
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.4
        - NIST-800-53-AU-5(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-24
        - audit_rules_system_shutdown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Remove the -f option from all Audit config files
      lineinfile:
        path: '{{ item }}'
        regexp: ^\s*(?:-f)\s+.*$
        state: absent
      loop: '{{ find_rules_d.files | map(attribute=''path'') | list + [''/etc/audit/audit.rules'']
        }}'
      when: '"audit" in ansible_facts.packages'
      tags:
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.4
        - NIST-800-53-AU-5(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-24
        - audit_rules_system_shutdown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Add Audit -f option into /etc/audit/rules.d/immutable.rules and /etc/audit/audit.rules
      lineinfile:
        path: '{{ item }}'
        create: true
        line: -f 2
      loop:
        - /etc/audit/audit.rules
        - /etc/audit/rules.d/immutable.rules
      when: '"audit" in ansible_facts.packages'
      tags:
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.4
        - NIST-800-53-AU-5(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-24
        - audit_rules_system_shutdown
        - low_complexity
        - low_disruption
        - medium_severity
        - reboot_required
        - restrict_strategy

    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - auditd_audispd_configure_remote_server
        - configure_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Make sure that a remote server is configured for Audispd
      lineinfile:
        path: /etc/audisp/audisp-remote.conf
        line: remote_server = {{ var_audispd_remote_server }}
        regexp: ^\s*remote_server\s*=.*$
        create: true
        state: present
      when: '"audit" in ansible_facts.packages'
      tags:
        - auditd_audispd_configure_remote_server
        - configure_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Enable service firewalld
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service firewalld
          service:
            name: firewalld
            enabled: 'yes'
            state: started
            masked: 'no'
          when:
            - '"firewalld" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7
        - NIST-800-53-AC-4
        - NIST-800-53-CA-3(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(21)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_firewalld_enabled

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_source_route.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_source_route

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_source_route from
        /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_source_route
        replace: '#net.ipv6.conf.all.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_source_route

    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv6_conf_all_accept_source_route

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.accept_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_redirects

    - name: Comment out any occurrences of net.ipv4.conf.all.accept_redirects from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.all.accept_redirects
        replace: '#net.ipv4.conf.all.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_redirects

    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_redirects

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.accept_source_route.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_source_route

    - name: Comment out any occurrences of net.ipv4.conf.all.accept_source_route from
        /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.all.accept_source_route
        replace: '#net.ipv4.conf.all.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_source_route

    - name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_accept_source_route

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.accept_source_route.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_source_route

    - name: Comment out any occurrences of net.ipv4.conf.default.accept_source_route from
        /etc/sysctl.d/*.conf files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.default.accept_source_route
        replace: '#net.ipv4.conf.default.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_source_route

    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_accept_source_route

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.icmp_echo_ignore_broadcasts.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts

    - name: Comment out any occurrences of net.ipv4.icmp_echo_ignore_broadcasts from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.icmp_echo_ignore_broadcasts
        replace: '#net.ipv4.icmp_echo_ignore_broadcasts'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts

    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.send_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_send_redirects

    - name: Comment out any occurrences of net.ipv4.conf.all.send_redirects from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.all.send_redirects
        replace: '#net.ipv4.conf.all.send_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_send_redirects

    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_all_send_redirects

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.send_redirects.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_send_redirects

    - name: Comment out any occurrences of net.ipv4.conf.default.send_redirects from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.conf.default.send_redirects
        replace: '#net.ipv4.conf.default.send_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_send_redirects

    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.10.1.1
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_conf_default_send_redirects

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths: /etc/sysctl.d/
        contains: ^[\s]*net.ipv4.ip_forward.*$
        patterns: '*.conf'
      register: find_sysctl_d
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_ip_forward

    - name: Comment out any occurrences of net.ipv4.ip_forward from /etc/sysctl.d/*.conf
        files
      replace:
        path: '{{ item }}'
        regexp: ^[\s]*net.ipv4.ip_forward
        replace: '#net.ipv4.ip_forward'
      loop: '{{ find_sysctl_d.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_ip_forward

    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.20
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - disable_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - reboot_required
        - sysctl_net_ipv4_ip_forward

    - name: Disable service autofs
      block:

        - name: Disable service autofs
          systemd:
            name: autofs.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          ignore_errors: 'yes'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_autofs_disabled

    - name: Unit Socket Exists - autofs.socket
      command: systemctl list-unit-files autofs.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_autofs_disabled

    - name: Disable socket autofs
      systemd:
        name: autofs.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - '"autofs.socket" in socket_file_exists.stdout_lines[1]'
      tags:
        - NIST-800-171-3.4.6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_autofs_disabled

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/home'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_home_nosuid
        - no_reboot_needed

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_home_nosuid
        - no_reboot_needed

    - name: If /home not mounted, craft mount_info manually
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - - target
          - source
          - fstype
          - options
        - - /home
          - ''
          - ''
          - defaults
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - ("--fstab" | length == 0)
        - (device_name.stdout | length == 0)
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_home_nosuid
        - no_reboot_needed

    - name: Make sure nosuid option is part of the to /home options
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nosuid''
          }) }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - mount_info is defined and "nosuid" not in mount_info.options
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_home_nosuid
        - no_reboot_needed

    - name: Ensure /home is mounted with nosuid option
      mount:
        path: /home
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("--fstab"
          | length == 0)
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_home_nosuid
        - no_reboot_needed

    - name: Ensure permission nosuid are set on var_removable_partition
      lineinfile:
        path: /etc/fstab
        regexp: ^\s*({{ var_removable_partition }})\s+([^\s]*)\s+([^\s]*)\s+([^\s]*)(.*)$
        backrefs: true
        line: \1 \2 \3 \4,nosuid \5
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-MP-7
        - configure_strategy
        - high_disruption
        - low_complexity
        - medium_severity
        - mount_option_nosuid_removable_partitions
        - no_reboot_needed

    - name: Disable service kdump
      block:

        - name: Disable service kdump
          systemd:
            name: kdump.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          ignore_errors: 'yes'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_kdump_disabled

    - name: Unit Socket Exists - kdump.socket
      command: systemctl list-unit-files kdump.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_kdump_disabled

    - name: Disable socket kdump
      systemd:
        name: kdump.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - '"kdump.socket" in socket_file_exists.stdout_lines[1]'
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_kdump_disabled

    - name: Test for existence /etc/cron.allow
      stat:
        path: /etc/cron.allow
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_groupowner_cron_allow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure group owner 0 on /etc/cron.allow
      file:
        path: /etc/cron.allow
        group: '0'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_groupowner_cron_allow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Test for existence /etc/cron.allow
      stat:
        path: /etc/cron.allow
      register: file_exists
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_owner_cron_allow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure owner 0 on /etc/cron.allow
      file:
        path: /etc/cron.allow
        owner: '0'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - file_exists.stat is defined and file_exists.stat.exists
      tags:
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_owner_cron_allow
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Ensure vsftpd is removed
      package:
        name: vsftpd
        state: absent
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-7.1(ii)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-5(1).1(v)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_vsftpd_removed

    - name: Get nfs and nfs4 mount points, that don't have sec=krb5:krb5i:krb5p
      command: findmnt --fstab --types nfs,nfs4 -O nosec=krb5:krb5i:krb5p -n
      register: points_register
      check_mode: false
      changed_when: false
      failed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(8)
        - NIST-800-53-IA-2(9)
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_krb_sec_remote_filesystems
        - no_reboot_needed

    - name: Add sec=krb5:krb5i:krb5p to nfs and nfs4 mount points
      mount:
        path: '{{ item.split()[0] }}'
        src: '{{ item.split()[1] }}'
        fstype: '{{ item.split()[2] }}'
        state: mounted
        opts: '{{ item.split()[3] }},sec=krb5:krb5i:krb5p'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (points_register.stdout | length > 0)
      with_items: '{{ points_register.stdout_lines }}'
      tags:
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(8)
        - NIST-800-53-IA-2(9)
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_krb_sec_remote_filesystems
        - no_reboot_needed

    - name: Get nfs and nfs4 mount points, that don't have noexec
      command: findmnt --fstab --types nfs,nfs4 -O nonoexec -n
      register: points_register
      check_mode: false
      changed_when: false
      failed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(10)
        - NIST-800-53-AC-6(8)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_noexec_remote_filesystems
        - no_reboot_needed

    - name: Add noexec to nfs and nfs4 mount points
      mount:
        path: '{{ item.split()[0] }}'
        src: '{{ item.split()[1] }}'
        fstype: '{{ item.split()[2] }}'
        state: mounted
        opts: '{{ item.split()[3] }},noexec'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (points_register.stdout | length > 0)
      with_items: '{{ points_register.stdout_lines }}'
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(10)
        - NIST-800-53-AC-6(8)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_noexec_remote_filesystems
        - no_reboot_needed

    - name: Get nfs and nfs4 mount points, that don't have nosuid
      command: findmnt --fstab --types nfs,nfs4 -O nonosuid -n
      register: points_register
      check_mode: false
      changed_when: false
      failed_when: false
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM6(a)
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_nosuid_remote_filesystems
        - no_reboot_needed

    - name: Add nosuid to nfs and nfs4 mount points
      mount:
        path: '{{ item.split()[0] }}'
        src: '{{ item.split()[1] }}'
        fstype: '{{ item.split()[2] }}'
        state: mounted
        opts: '{{ item.split()[3] }},nosuid'
      when:
        - ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
        - (points_register.stdout | length > 0)
      with_items: '{{ points_register.stdout_lines }}'
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM6(a)
        - configure_strategy
        - low_complexity
        - medium_disruption
        - medium_severity
        - mount_option_nosuid_remote_filesystems
        - no_reboot_needed

    - name: Ensure ypserv is removed
      package:
        name: ypserv
        state: absent
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_ypserv_removed

    - name: Ensure rsh-server is removed
      package:
        name: rsh-server
        state: absent
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-5(1)(c)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_rsh-server_removed

    - name: Ensure telnet-server is removed
      package:
        name: telnet-server
        state: absent
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_telnet-server_removed

    - name: Ensure tftp-server is removed
      package:
        name: tftp-server
        state: absent
      tags:
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - package_tftp-server_removed

    - name: Find out if the file exists and contains the line configuring server arguments
      find:
        path: /etc/xinetd.d
        patterns: tftp
        contains: ^[\s]+server_args.*$
      register: tftpd_secure_config_line
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-7(a)
        - configure_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - tftpd_uses_secure_mode

    - name: Ensure that TFTP server is configured to start with secure directory
      lineinfile:
        path: /etc/xinetd.d/tftp
        regexp: ^[\s]*(server_args[\s]+=[\s]+.*?)(-s[\s]+[/\.\w]+)*(.*)$
        line: \1 -s {{ var_tftpd_secure_directory }} \3
        state: present
        backrefs: true
      when: tftpd_secure_config_line is defined and tftpd_secure_config_line.matched >
        0
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-7(a)
        - configure_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - tftpd_uses_secure_mode

    - name: Insert correct config line to start TFTP server with secure directory
      lineinfile:
        path: /etc/xinetd.d/tftp
        line: server_args = -s {{ var_tftpd_secure_directory }}
        state: present
        create: true
      when: tftpd_secure_config_line is defined and tftpd_secure_config_line.matched ==
        0
      tags:
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(b)
        - NIST-800-53-CM-7(a)
        - configure_strategy
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - tftpd_uses_secure_mode

    - name: Gather the package facts
      package_facts:
        manager: auto
      tags:
        - NIST-800-53-IA-5(e)
        - configure_strategy
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - snmpd_not_default_password

    - name: XCCDF Value var_snmpd_rw_string # promote to variable
      set_fact:
        var_snmpd_rw_string: !!str changemerw
      tags:
        - always

    - name: Check if file /etc/snmp/snmpd.conf exists
      stat:
        path: /etc/snmp/snmpd.conf
      register: snmpd
      when: '"net-snmp" in ansible_facts.packages'
      tags:
        - NIST-800-53-IA-5(e)
        - configure_strategy
        - high_severity
        - low_comp

    - name: Check if file /etc/snmp/snmpd.conf exists
      stat:
        path: /etc/snmp/snmpd.conf
      register: snmpd
      when: '"net-snmp" in ansible_facts.packages'
      tags:
        - NIST-800-53-IA-5(e)
        - configure_strategy
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - snmpd_not_default_password

    - name: Replace all instances of SNMP RO strings
      replace:
        path: /etc/snmp/snmpd.conf
        regexp: public
        replace: '{{ var_snmpd_ro_string }}'
      when:
        - '"net-snmp" in ansible_facts.packages'
        - (snmpd.stat.exists is defined and snmpd.stat.exists)
      tags:
        - NIST-800-53-IA-5(e)
        - configure_strategy
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - snmpd_not_default_password

    - name: Replace all instances of SNMP RW strings
      replace:
        path: /etc/snmp/snmpd.conf
        regexp: private
        replace: '{{ var_snmpd_rw_string }}'
      when:
        - '"net-snmp" in ansible_facts.packages'
        - (snmpd.stat.exists is defined and snmpd.stat.exists)
      tags:
        - NIST-800-53-IA-5(e)
        - configure_strategy
        - high_severity
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - snmpd_not_default_password

    - name: Ensure openssh-server is installed
      package:
        name: openssh-server
        state: present
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-CM-6(a)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - package_openssh-server_installed

    - name: Enable service sshd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service sshd
          service:
            name: sshd
            enabled: 'yes'
            state: started
            masked: 'no'
          when:
            - '"openssh-server" in ansible_facts.packages'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.8
        - NIST-800-171-3.5.4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-8
        - NIST-800-53-SC-8(1)
        - NIST-800-53-SC-8(2)
        - NIST-800-53-SC-8(3)
        - NIST-800-53-SC-8(4)
        - enable_strategy
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - service_sshd_enabled

    - name: Find /etc/ssh/ file(s)
      find:
        paths: /etc/ssh/
        patterns: ^.*_key$
        use_regex: true
        hidden: true
      register: files_found
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_sshd_private_key
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Set permissions for /etc/ssh/ file(s)
      file:
        path: '{{ item.path }}'
        mode: '0600'
      with_items:
        - '{{ files_found.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_sshd_private_key
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Find /etc/ssh/ file(s)
      find:
        paths: /etc/ssh/
        patterns: ^.*.pub$
        use_regex: true
        hidden: true
      register: files_found
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_sshd_pub_key
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Set permissions for /etc/ssh/ file(s)
      file:
        path: '{{ item.path }}'
        mode: '0644'
      with_items:
        - '{{ files_found.files }}'
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-53-CM-6(a)
        - configure_strategy
        - file_permissions_sshd_pub_key
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed

    - name: Disable Host-Based Authentication
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*HostbasedAuthentication\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*HostbasedAuthentication\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*HostbasedAuthentication\s+
            line: HostbasedAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.5.6
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - disable_host_auth
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy

    - name: Disable SSH Access via Empty Passwords
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            line: PermitEmptyPasswords no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.5.6
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_empty_passwords

    - name: Disable GSSAPI Authentication
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*GSSAPIAuthentication\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*GSSAPIAuthentication\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*GSSAPIAuthentication\s+
            line: GSSAPIAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_gssapi_auth

    - name: Disable Kerberos Authentication
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*KerberosAuthentication\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*KerberosAuthentication\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*KerberosAuthentication\s+
            line: KerberosAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_kerb_auth

    - name: Disable SSH Root Login
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitRootLogin\s+
            line: PermitRootLogin no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.5.6
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(5)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_disable_root_login

    - name: Do Not Allow SSH Environment Options
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PermitUserEnvironment\s+
            line: PermitUserEnvironment no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.5.6
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_do_not_permit_user_env

    - name: Enable Use of Strict Mode Checking
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*StrictModes\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*StrictModes\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*StrictModes\s+
            line: StrictModes yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_enable_strictmodes

    - name: Enable SSH Warning Banner
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Banner\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Banner\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*Banner\s+
            line: Banner /etc/issue
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.5.6
        - NIST-800-171-3.1.9
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_enable_warning_banner

    - name: Enable Encrypted X11 Forwarding
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*X11Forwarding\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*X11Forwarding\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*X11Forwarding\s+
            line: X11Forwarding yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.13
        - NIST-800-53-AC-17(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - high_severity
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - restrict_strategy
        - sshd_enable_x11_forwarding

    - name: Enable SSH Print Last Log
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PrintLastLog\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PrintLastLog\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*PrintLastLog\s+
            line: PrintLastLog yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-9
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_print_last_log

    - name: Set SSH Client Alive Count Max to zero
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveCountMax\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveCountMax\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*ClientAliveCountMax\s+
            line: ClientAliveCountMax 0
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - CJIS-5.5.6
        - NIST-800-171-3.1.11
        - NIST-800-53-AC-12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-2(5)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-10
        - PCI-DSS-Req-8.1.8
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_set_keepalive_0

    - name: Enable Use of Privilege Separation
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*UsePrivilegeSeparation\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*UsePrivilegeSeparation\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)^\s*UsePrivilegeSeparation\s+
            line: UsePrivilegeSeparation {{ var_sshd_priv_separation }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_type not in ["docker", "lxc", "openvz", "podman", "container"]
      tags:
        - NIST-800-171-3.1.12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(a)
        - low_complexity
        - low_disruption
        - medium_severity
        - no_reboot_needed
        - restrict_strategy
        - sshd_use_priv_separation

